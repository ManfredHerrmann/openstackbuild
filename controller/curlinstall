#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!!!!****BASE SYSTEM CONFIGURATION
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#Disable KeyStone from starting automatitcally
echo "manual" > /etc/init/keystone.override

#install packages
#Set mariadb password to 'openstack' during install.
apt-get install mariadb-server python-mysqldb keystone python-openstackclient \
apache2 libapache2-mod-wsgi memcached python-memcache rabbitmq-server \
glance python-glanceclient nova-api nova-cert nova-conductor nova-consoleauth \
nova-novncproxy nova-scheduler python-novaclient openstack-dashboard \
neutron-server neutron-plugin-ml2 neutron-plugin-linuxbridge-agent \
neutron-l3-agent neutron-dhcp-agent neutron-metadata-agent \
python-neutronclient conntrack

#Configure MySQL and RabbitMQ
#Place config file 
curl -o /etc/mysql/conf.d/mysqld_openstack.cnf http://tools/openstackbuild/controller/mysqld_openstack.cnf

#Restart MySQL
service mysql restart

#Run the MySQL secure install utility, answer Y to all questions
mysql_secure_installation

#Add a RabbitMQ user called openstack and set permissions
rabbitmqctl add_user openstack rabbit
rabbitmqctl set_permissions openstack ".*" ".*" ".*"

#Create all required databases
mysql -u root --password=openstack
CREATE DATABASE keystone;
GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'localhost' IDENTIFIED BY 'keystone';
GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'%' IDENTIFIED BY 'keystone';
CREATE DATABASE glance;
GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'localhost' IDENTIFIED BY 'glance';
GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'%' IDENTIFIED BY 'glance';
CREATE DATABASE nova;
GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'localhost' IDENTIFIED BY 'nova';
GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'%' IDENTIFIED BY 'nova';
CREATE DATABASE neutron;
GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'localhost' IDENTIFIED BY 'neutron';
GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'%' IDENTIFIED BY 'neutron';
quit;

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!****CONFIGURE KEYSTONE
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#Place config file
curl -o /etc/keystone/keystone.conf http://tools/openstackbuild/controller/keystone.conf

#Populate the keystone database
/bin/sh -c "keystone-manage db_sync" keystone

#Change the servername to match the localhost name
sed -i '1s/^/ServerName controller\n&/' /etc/apache2/apache2.conf

#Place config file
curl -o /etc/apache2/sites-available/wsgi-keystone.conf http://tools/openstackbuild/controller/wsgi-keystone.conf

#Enable virtual hosts
ln -s /etc/apache2/sites-available/wsgi-keystone.conf /etc/apache2/sites-enabled

#Restart Apache
service apache2 restart

#Set temporary env variables
export OS_TOKEN=insecuretoken
export OS_URL=http://controller:35357/v3
export OS_IDENTITY_API_VERSION=3

#Create the keystone service
openstack service create --name keystone --description "OpenStack Identity" identity

#Create API endpoints
openstack endpoint create --region RegionOne identity public http://controller:5000/v2.0
openstack endpoint create --region RegionOne identity internal http://controller:5000/v2.0
openstack endpoint create --region RegionOne identity admin http://controller:35357/v2.0

#Create projects users and roles
openstack project create --domain default --description "Admin Project" admin
openstack project create --domain default --description "Service Project" service
openstack project create --domain default --description "Demo Project" demo
openstack project create --domain default --description "Demo2 Project" demo2
openstack user create --domain default admin --password=openstack
openstack user create --domain default demo --password=demo
openstack user create --domain default demo2 --password=demo2
openstack role create admin
openstack role create user
openstack role add --project admin --user admin admin
openstack role add --project demo --user demo user
openstack role add --project demo2 --user demo2 user

#Test
unset OS_TOKEN OS_URL OS_IDENTITY_API_VERSION

#Issue tokens
openstack --os-auth-url http://controller:35357/v3 --os-project-domain-id default \
--os-user-domain-id default --os-project-name admin --os-username admin \
--os-password openstack --os-auth-type password token issue

openstack --os-auth-url http://controller:35357/v3 --os-project-domain-id default \
--os-user-domain-id default --os-project-name demo --os-username demo \
--os-password demo --os-auth-type password token issue

#Test this to make sure you get output
openstack --os-auth-url http://controller:35357 \
  --os-project-name admin --os-username admin \
  --os-password openstack project list

#Create admin source file
cat >> ~/adminrc <<EOF
export OS_PROJECT_DOMAIN_ID=default
export OS_USER_DOMAIN_ID=default
export OS_PROJECT_NAME=admin
export OS_TENANT_NAME=admin
export OS_USERNAME=admin
export OS_PASSWORD=openstack
export OS_AUTH_URL=http://controller:35357/v3
export OS_IDENTITY_API_VERSION=3
EOF

#Create Demo source file
cat >> ~/demorc <<EOF
export OS_PROJECT_DOMAIN_ID=default
export OS_USER_DOMAIN_ID=default
export OS_PROJECT_NAME=demo
export OS_TENANT_NAME=demo
export OS_USERNAME=demo
export OS_PASSWORD=demo
export OS_AUTH_URL=http://controller:5000/v3
export OS_IDENTITY_API_VERSION=3
EOF

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!****CONFIGURE GLANCE
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#Create Glance user, roles, services, and endpoints
source ~/adminrc 
openstack user create --domain default glance --password=glance
openstack role add --project service --user glance admin
openstack service create --name glance --description "OpenStack Image service" image
openstack endpoint create --region RegionOne image public http://controller:9292
openstack endpoint create --region RegionOne image internal http://controller:9292
openstack endpoint create --region RegionOne image admin http://controller:9292

#Install Config file
curl -o /etc/glance/glance-api.conf http://tools/openstackbuild/controller/glance-api.conf
curl -o /etc/glance/glance-registry.conf http://tools/openstackbuild/controller/glance-registry.conf

#Populate the image service DB
/bin/sh -c "glance-manage db_sync" glance

#Restart services
service glance-registry restart
service glance-api restart

#Verify installation
echo "export OS_IMAGE_API_VERSION=2" | tee -a admin-openrc.sh demo-openrc.sh
source ~/adminrc
mkdir /tmp/images
wget -P /tmp/images http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img

glance image-create --name "cirros" \
--file /tmp/images/cirros-0.3.4-x86_64-disk.img \
--disk-format qcow2 --container-format bare \
--visibility public --progress

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!****CONFIGURE NOVA
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#Create Nova user, roles, services, and endpoints
source ~/adminrc
openstack user create --domain default nova --password=nova
openstack role add --project service --user nova admin
openstack service create --name nova --description "OpenStack Compute" compute

openstack endpoint create --region RegionOne compute public http://controller:8774/v2/%\(tenant_id\)s
openstack endpoint create --region RegionOne compute internal http://controller:8774/v2/%\(tenant_id\)s
openstack endpoint create --region RegionOne compute admin http://controller:8774/v2/%\(tenant_id\)s

#Install Config file
curl -o /etc/nova/nova.conf http://tools/openstackbuild/controller/nova.conf

#Populate the database
/bin/sh -c "nova-manage db sync" nova

#Restart the services
service nova-api restart
service nova-cert restart
service nova-consoleauth restart
service nova-scheduler restart
service nova-conductor restart
service nova-novncproxy restart

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!****CONFIGURE HORIZON
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#Install Config file
curl -o /etc/openstack-dashboard/local_settings.py http://tools/openstackbuild/controller/local_settings.py

#Restart web server
service apache2 reload

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!****CONFIGURE NEUTRON
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#Create Neutron user, roles, services, and endpoints
source ~/adminrc
openstack user create --domain default neutron --password=neutron
openstack role add --project service --user neutron admin
openstack service create --name neutron --description "OpenStack Networking" network
openstack endpoint create --region RegionOne network public http://controller:9696
openstack endpoint create --region RegionOne network internal http://controller:9696
openstack endpoint create --region RegionOne network admin http://controller:9696

#Install Config file
curl -o /etc/neutron/neutron.conf http://tools/openstackbuild/controller/neutron.conf
curl -o /etc/neutron/plugins/ml2/ml2_conf.ini http://tools/openstackbuild/controller/ml2_conf.ini
curl -o /etc/neutron/plugins/ml2/linuxbridge_agent.ini http://tools/openstackbuild/controller/linuxbridge_agent.ini
curl -o /etc/neutron/l3_agent.ini http://tools/openstackbuild/controller/l3_agent.ini
curl -o /etc/neutron/dhcp_agent.ini http://tools/openstackbuild/controller/dhcp_agent.ini
curl -o /etc/neutron/dnsmasq-neutron.conf http://tools/openstackbuild/controller/dnsmasq-neutron.conf
curl -o /etc/neutron/metadata_agent.ini http://tools/openstackbuild/controller/metadata_agent.ini

#Populate the database
/bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head" neutron

#Restart services
service nova-api restart
service neutron-server restart
service neutron-plugin-linuxbridge-agent restart
service neutron-dhcp-agent restart
service neutron-metadata-agent restart
service neutron-l3-agent restart

#Remove unneeded SQLLite databases
rm -f /var/lib/neutron/neutron.sqlite
rm -f /var/lib/nova/nova.sqlite
rm -f /var/lib/keystone/keystone.db
